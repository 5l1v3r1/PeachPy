# This file is auto-generated by /codegen/x86_64_test_encoding.py
# Reference opcodes are generated by:
#     GNU assembler (GNU Binutils) 2.25

from peachpy.x86_64 import *
import unittest


class TestKADDB(unittest.TestCase):
    def runTest(self):
        pass


class TestKADDW(unittest.TestCase):
    def runTest(self):
        pass


class TestKADDD(unittest.TestCase):
    def runTest(self):
        pass


class TestKADDQ(unittest.TestCase):
    def runTest(self):
        pass


class TestKANDB(unittest.TestCase):
    def runTest(self):
        pass


class TestKANDW(unittest.TestCase):
    def runTest(self):
        pass


class TestKANDD(unittest.TestCase):
    def runTest(self):
        pass


class TestKANDQ(unittest.TestCase):
    def runTest(self):
        pass


class TestKANDNB(unittest.TestCase):
    def runTest(self):
        pass


class TestKANDNW(unittest.TestCase):
    def runTest(self):
        pass


class TestKANDND(unittest.TestCase):
    def runTest(self):
        pass


class TestKANDNQ(unittest.TestCase):
    def runTest(self):
        pass


class TestKORB(unittest.TestCase):
    def runTest(self):
        pass


class TestKORW(unittest.TestCase):
    def runTest(self):
        pass


class TestKORD(unittest.TestCase):
    def runTest(self):
        pass


class TestKORQ(unittest.TestCase):
    def runTest(self):
        pass


class TestKXNORB(unittest.TestCase):
    def runTest(self):
        pass


class TestKXNORW(unittest.TestCase):
    def runTest(self):
        pass


class TestKXNORD(unittest.TestCase):
    def runTest(self):
        pass


class TestKXNORQ(unittest.TestCase):
    def runTest(self):
        pass


class TestKXORB(unittest.TestCase):
    def runTest(self):
        pass


class TestKXORW(unittest.TestCase):
    def runTest(self):
        pass


class TestKXORD(unittest.TestCase):
    def runTest(self):
        pass


class TestKXORQ(unittest.TestCase):
    def runTest(self):
        pass


class TestKMOVB(unittest.TestCase):
    def runTest(self):
        pass


class TestKMOVW(unittest.TestCase):
    def runTest(self):
        pass


class TestKMOVD(unittest.TestCase):
    def runTest(self):
        pass


class TestKMOVQ(unittest.TestCase):
    def runTest(self):
        pass


class TestKNOTB(unittest.TestCase):
    def runTest(self):
        pass


class TestKNOTW(unittest.TestCase):
    def runTest(self):
        pass


class TestKNOTD(unittest.TestCase):
    def runTest(self):
        pass


class TestKNOTQ(unittest.TestCase):
    def runTest(self):
        pass


class TestKUNPCKBW(unittest.TestCase):
    def runTest(self):
        pass


class TestKUNPCKWD(unittest.TestCase):
    def runTest(self):
        pass


class TestKUNPCKDQ(unittest.TestCase):
    def runTest(self):
        pass


class TestKTESTB(unittest.TestCase):
    def runTest(self):
        pass


class TestKTESTW(unittest.TestCase):
    def runTest(self):
        pass


class TestKTESTD(unittest.TestCase):
    def runTest(self):
        pass


class TestKTESTQ(unittest.TestCase):
    def runTest(self):
        pass


class TestKORTESTB(unittest.TestCase):
    def runTest(self):
        pass


class TestKORTESTW(unittest.TestCase):
    def runTest(self):
        pass


class TestKORTESTD(unittest.TestCase):
    def runTest(self):
        pass


class TestKORTESTQ(unittest.TestCase):
    def runTest(self):
        pass


class TestKSHIFTLB(unittest.TestCase):
    def runTest(self):
        pass


class TestKSHIFTLW(unittest.TestCase):
    def runTest(self):
        pass


class TestKSHIFTLD(unittest.TestCase):
    def runTest(self):
        pass


class TestKSHIFTLQ(unittest.TestCase):
    def runTest(self):
        pass


class TestKSHIFTRB(unittest.TestCase):
    def runTest(self):
        pass


class TestKSHIFTRW(unittest.TestCase):
    def runTest(self):
        pass


class TestKSHIFTRD(unittest.TestCase):
    def runTest(self):
        pass


class TestKSHIFTRQ(unittest.TestCase):
    def runTest(self):
        pass


